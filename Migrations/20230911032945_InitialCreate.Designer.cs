// <auto-generated />
using System;
using Ch4Lab.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ch4Lab.Migrations
{
    [DbContext(typeof(ContactManagerContext))]
    [Migration("20230911032945_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ch4Lab.Models.Category", b =>
                {
                    b.Property<string>("CategoryCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryCode");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryCode = "X",
                            Description = "None"
                        },
                        new
                        {
                            CategoryCode = "A",
                            Description = "Administrator"
                        },
                        new
                        {
                            CategoryCode = "D",
                            Description = "Director"
                        },
                        new
                        {
                            CategoryCode = "M",
                            Description = "Manager"
                        },
                        new
                        {
                            CategoryCode = "S",
                            Description = "Specialist"
                        },
                        new
                        {
                            CategoryCode = "L",
                            Description = "Analyst"
                        });
                });

            modelBuilder.Entity("Ch4Lab.Models.Contact", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContactId"));

                    b.Property<string>("CategoryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("EMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Organization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContactId");

                    b.HasIndex("CategoryCode");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            ContactId = 1001,
                            CategoryCode = "D",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EMail = "lipanp@slu.edu",
                            FirstName = "Petruta",
                            LastName = "Lipan",
                            Organization = "University Museums & Galleries",
                            Phone = "(123)456-7890"
                        },
                        new
                        {
                            ContactId = 1002,
                            CategoryCode = "X",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EMail = "jlaman@slu.edu",
                            FirstName = "Jack",
                            LastName = "Laman",
                            Phone = "(123)456-8907"
                        },
                        new
                        {
                            ContactId = 1003,
                            CategoryCode = "A",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EMail = "ljohnson@slu.edu",
                            FirstName = "Laura",
                            LastName = "Johnson",
                            Organization = "University Museums & Galleries",
                            Phone = "(123)456-9078"
                        },
                        new
                        {
                            ContactId = 1004,
                            CategoryCode = "S",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EMail = "averhoff@slu.edu",
                            FirstName = "Anna",
                            LastName = "Verhoff",
                            Organization = "University Museums & Galleries",
                            Phone = "(123)456-0789"
                        });
                });

            modelBuilder.Entity("Ch4Lab.Models.Contact", b =>
                {
                    b.HasOne("Ch4Lab.Models.Category", "Category")
                        .WithMany("Contacts")
                        .HasForeignKey("CategoryCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Ch4Lab.Models.Category", b =>
                {
                    b.Navigation("Contacts");
                });
#pragma warning restore 612, 618
        }
    }
}
